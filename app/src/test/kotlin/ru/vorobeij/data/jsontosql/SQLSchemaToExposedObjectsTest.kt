package ru.vorobeij.data.jsontosql

import kotlin.test.assertEquals
import org.junit.Test

internal class SQLLinesToFieldsConverterTest {

    private val converter = SQLLinesToFieldsConverter(200)

    @Test
    fun `convert object`() {
        val schema = """
            CREATE TABLE "SearchHistory" (
              "query" varchar PRIMARY KEY NOT NULL,
              "timestamp" INTEGER NOT NULL
            );
        """.trimIndent()
        val res = """
            object SearchHistory : Table() {

                val query: Column<String> = varchar("query", 200)
                override val primaryKey = PrimaryKey(query)
                val timestamp: Column<Long> = long("timestamp")
            }
        """.trimIndent()
        assertEquals(res, converter.convert(schema))
    }

    @Test
    fun `convert lines`() {
        val results = mapOf(
            """"query" varchar PRIMARY KEY NOT NULL,""" to """val query: Column<String> = varchar("query", 200)
                |    override val primaryKey = PrimaryKey(query)""".trimMargin(),
            """"timestamp" INTEGER NOT NULL,""" to """val timestamp: Column<Long> = long("timestamp")""",
            """"description" varchar,""" to """val description: Column<String> = varchar("description", 200)""",
            """"autogeneratedSubtitles" boolean,""" to """val autogeneratedSubtitles: Column<Boolean> = bool("autogeneratedSubtitles")"""
        )
        results.forEach {
            assertEquals(it.value, converter.lineToField(it.key))
        }
    }

    @Test
    fun `convert object 2`() {
        val schema = """
            CREATE TABLE "YouTubeVideo" (
                  "id" varchar PRIMARY KEY NOT NULL,
                  "title" varchar NOT NULL,
                  "description" varchar(10),
                  "channelTitle" varchar NOT NULL,
                  "subsUriString" varchar,
                  "previewUrl" varchar NOT NULL,
                  "channelId" varchar,
                  "sourceLang" varchar NOT NULL,
                  "durationMs" INTEGER NOT NULL,
                  "openedAtTs" INTEGER NOT NULL,
                  "publishedAtTs" INTEGER NOT NULL,
                  "difficulty" INTEGER,
                  "autogeneratedSubtitles" boolean,
                  "banned" boolean DEFAULT false,
                  "reportedTimes" INTEGER DEFAULT 0,
                  "requiresModeration" boolean DEFAULT true
            );
        """.trimIndent()
        val res = """
            object YouTubeVideo : Table() {

                val id: Column<String> = varchar("id", 200)
                override val primaryKey = PrimaryKey(id)
                val title: Column<String> = varchar("title", 200)
                val description: Column<String> = varchar("description", 10)
                val channelTitle: Column<String> = varchar("channelTitle", 200)
                val subsUriString: Column<String> = varchar("subsUriString", 200)
                val previewUrl: Column<String> = varchar("previewUrl", 200)
                val channelId: Column<String> = varchar("channelId", 200)
                val sourceLang: Column<String> = varchar("sourceLang", 200)
                val durationMs: Column<Long> = long("durationMs")
                val openedAtTs: Column<Long> = long("openedAtTs")
                val publishedAtTs: Column<Long> = long("publishedAtTs")
                val difficulty: Column<Long> = long("difficulty")
                val autogeneratedSubtitles: Column<Boolean> = bool("autogeneratedSubtitles")
                val banned: Column<Boolean> = bool("banned")
                val reportedTimes: Column<Long> = long("reportedTimes")
                val requiresModeration: Column<Boolean> = bool("requiresModeration")
            }
        """.trimIndent()
        assertEquals(res, converter.convert(schema))
    }
}